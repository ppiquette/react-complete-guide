{"ast":null,"code":"import _toConsumableArray from \"/Users/patrickpiquette/Learning/react-complete-guide/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/patrickpiquette/Learning/react-complete-guide/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/patrickpiquette/Learning/react-complete-guide/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickpiquette/Learning/react-complete-guide/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickpiquette/Learning/react-complete-guide/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickpiquette/Learning/react-complete-guide/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickpiquette/Learning/react-complete-guide/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrickpiquette/Learning/react-complete-guide/Section5/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\nimport Radium, { StyleRoot } from 'radium';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      persons: [{\n        id: \"id_787\",\n        name: \"Tom\",\n        age: \"39\"\n      }, {\n        id: \"id_kjh7\",\n        name: \"Tim\",\n        age: \"36\"\n      }, {\n        id: \"id_kjhiu\",\n        name: \"Tob\",\n        age: \"35\"\n      }, {\n        id: \"id_ky87\",\n        name: \"Bobby\",\n        age: \"65\"\n      }],\n      showPerson: false\n    };\n    _this.patate = 0;\n\n    _this.deleteHandler = function (index) {\n      console.log(\"deleting index: \", {\n        index: index\n      });\n\n      var updated_persons = _this.state.persons.slice();\n\n      updated_persons.splice(index, 1);\n\n      _this.setState({\n        persons: updated_persons\n      });\n    };\n\n    _this.nameChangeHandler = function (event, id) {\n      var person_index = _this.state.persons.findIndex(function (p) {\n        return p.id === id;\n      });\n\n      var person = _objectSpread({}, _this.state.persons[person_index]);\n\n      person.name = event.target.value;\n\n      var updated_persons = _toConsumableArray(_this.state.persons);\n\n      updated_persons[person_index] = person;\n\n      _this.setState({\n        persons: updated_persons\n      });\n    };\n\n    _this.togglePersonHandler = function (event) {\n      _this.setState({\n        showPerson: !_this.state.showPerson\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var button_style = {\n        backgroundColor: 'green',\n        color: 'white',\n        font: 'inherit',\n        border: '1px solid blue',\n        padding: '8px',\n        cursor: 'pointer',\n        ':hover': {\n          backgroundColor: 'lightgreen',\n          color: 'black'\n        }\n      };\n      var className = [];\n\n      if (this.state.persons.length <= 2) {\n        className.push('red');\n      }\n\n      if (this.state.persons.length <= 1) {\n        className.push('bold');\n      }\n\n      var dynamic_list_persons = null;\n\n      if (this.state.showPerson) {\n        // This overwrite the content of the button style when we show all persons\n        button_style.backgroundColor = 'red';\n        button_style[':hover'] = {\n          backgroundColor: 'salmon',\n          color: 'black'\n        };\n        dynamic_list_persons = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, this.state.persons.map(function (person, index) {\n          return React.createElement(Person, {\n            key: person.id // https://fb.me/react-warning-keys\n            ,\n            click: function click() {\n              return _this2.deleteHandler(index);\n            },\n            name: person.name,\n            age: person.age,\n            changed: function changed(event) {\n              return _this2.nameChangeHandler(event, person.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          });\n        }));\n      }\n\n      return React.createElement(StyleRoot, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Hello World\"), React.createElement(\"p\", {\n        className: className.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" Text\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: button_style,\n        onClick: this.togglePersonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"togglePersonHandler\")), dynamic_list_persons));\n    }\n  }]);\n\n  return App;\n}(Component); // Radium is used to wrap our component in order to understanf pseudo selectors (ex button:hover)\n\n\nexport default Radium(App);","map":{"version":3,"sources":["/Users/patrickpiquette/Learning/react-complete-guide/Section5/src/App.js"],"names":["React","Component","Person","Radium","StyleRoot","App","state","persons","id","name","age","showPerson","patate","deleteHandler","index","console","log","updated_persons","slice","splice","setState","nameChangeHandler","event","person_index","findIndex","p","person","target","value","togglePersonHandler","button_style","backgroundColor","color","font","border","padding","cursor","className","length","push","dynamic_list_persons","map","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person'\nimport Radium, {StyleRoot} from 'radium'\n\nclass App extends Component {\n  // state is only available since we are extending Component\n  state = {\n    persons: [\n      {id: \"id_787\", name: \"Tom\", age: \"39\"},\n      {id: \"id_kjh7\", name: \"Tim\", age: \"36\"},\n      {id: \"id_kjhiu\", name: \"Tob\", age: \"35\"},\n      {id: \"id_ky87\", name: \"Bobby\", age: \"65\"}\n    ],\n    showPerson: false\n  };\n  patate = 0\n  \n  deleteHandler = (index) => {\n    console.log(\"deleting index: \", {index})\n    const updated_persons = this.state.persons.slice()\n    updated_persons.splice(index, 1)\n    this.setState({persons: updated_persons})\n  }\n\n  nameChangeHandler = (event, id) => {\n    const person_index = this.state.persons.findIndex(p => {\n        return p.id === id\n    })\n    const person = {...this.state.persons[person_index]}\n    person.name = event.target.value\n\n    const updated_persons = [...this.state.persons]\n    updated_persons[person_index] = person\n    this.setState({persons: updated_persons})\n  }\n\n  togglePersonHandler = (event) => {\n    this.setState(\n      {showPerson: !this.state.showPerson}\n    )\n  }\n\n  render() {\n    const button_style = {\n      backgroundColor: 'green',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n    }\n\n    let className = [];\n    if(this.state.persons.length <= 2 ) {\n      className.push('red');\n    }\n    if(this.state.persons.length <= 1) {\n      className.push('bold');\n    }\n\n    let dynamic_list_persons = null\n    if(this.state.showPerson) {\n      // This overwrite the content of the button style when we show all persons\n      button_style.backgroundColor = 'red';\n      button_style[':hover'] = {\n        backgroundColor: 'salmon',\n        color: 'black'\n      }\n      dynamic_list_persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return (\n              <Person\n                key={person.id}  // https://fb.me/react-warning-keys\n                click={() => this.deleteHandler(index)}\n                name={person.name} \n                age={person.age}\n                changed={(event) => this.nameChangeHandler(event, person.id)}\n              />\n            )\n          })}\n        </div>\n      )\n    }\n\n    return (\n      <StyleRoot>\n        <div className='App'>\n          <h1>Hello World</h1>\n          {/* style defined in css files applied , we only insert the class name here*/}\n          <p className={className.join(' ')}> Text</p>\n          {/* style defined in local variable (inline style) */}\n          <p><button style={button_style} onClick={this.togglePersonHandler}>togglePersonHandler</button></p>\n          {dynamic_list_persons}\n        </div>\n      </StyleRoot>\n    );\n  }\n}\n\n// Radium is used to wrap our component in order to understanf pseudo selectors (ex button:hover)\nexport default Radium(App);\n"]},"metadata":{},"sourceType":"module"}